// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PatientCareAPI.DataAccess;

namespace PatientCareAPI.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    partial class ApplicationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("PatientCareAPI.Models.Authentication.RolesModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.Property<string>("Name")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.HasKey("Id");

                    b.ToTable("Tbl_Roles");
                });

            modelBuilder.Entity("PatientCareAPI.Models.Authentication.UsersModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.Property<string>("Email")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.Property<bool>("EmailConfirmed")
                        .HasMaxLength(85)
                        .HasColumnType("tinyint(85)");

                    b.Property<bool>("Isactive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("NormalizedUsername")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Username")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.HasKey("Id");

                    b.ToTable("Tbl_Users");
                });

            modelBuilder.Entity("PatientCareAPI.Models.Authentication.UsertoRoleModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("RoleID")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.Property<string>("UserID")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.HasKey("Id");

                    b.ToTable("Users_to_Role");
                });

            modelBuilder.Entity("PatientCareAPI.Models.Authentication.UsertoSaltModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Salt")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.Property<string>("UserID")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.HasKey("Id");

                    b.ToTable("Users_to_Salt");
                });

            modelBuilder.Entity("PatientCareAPI.Models.Settings.CaseModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CaseGroup")
                        .HasColumnType("text");

                    b.Property<int>("CaseStatus")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("text");

                    b.Property<DateTime>("DeleteTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteUser")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Tbl_Case");
                });

            modelBuilder.Entity("PatientCareAPI.Models.Settings.UnitModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("text");

                    b.Property<DateTime>("DeleteTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteUser")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.Property<string>("UnitGroup")
                        .HasColumnType("text");

                    b.Property<int>("UnitStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Tbl_Unit");
                });
#pragma warning restore 612, 618
        }
    }
}
