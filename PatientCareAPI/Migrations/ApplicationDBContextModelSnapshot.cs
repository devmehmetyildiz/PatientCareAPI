// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PatientCareAPI.DataAccess;

namespace PatientCareAPI.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    partial class ApplicationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("PatientCareAPI.Models.Application.ActivepatientModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("Approvaldate")
                        .HasColumnType("datetime");

                    b.Property<int>("Bednumber")
                        .HasColumnType("int");

                    b.Property<string>("CaseId")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Departmentid")
                        .HasColumnType("text");

                    b.Property<string>("Departmentname")
                        .HasColumnType("text");

                    b.Property<int>("Floornumber")
                        .HasColumnType("int");

                    b.Property<string>("ImageID")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Iswaitingactivation")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("PatientID")
                        .HasColumnType("text");

                    b.Property<string>("Patientdiagnosis")
                        .HasColumnType("text");

                    b.Property<string>("Processid")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Registerdate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Releasedate")
                        .HasColumnType("datetime");

                    b.Property<int>("Roomnumber")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Activepatients");
                });

            modelBuilder.Entity("PatientCareAPI.Models.Application.ActivepatientmovementstotodosModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ComplatedUser")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Complatetime")
                        .HasColumnType("datetime");

                    b.Property<string>("Iscomplated")
                        .HasColumnType("text");

                    b.Property<string>("MovementID")
                        .HasColumnType("text");

                    b.Property<string>("TodoID")
                        .HasColumnType("text");

                    b.Property<int>("Vieworder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Activepatientmovementstotodos");
                });

            modelBuilder.Entity("PatientCareAPI.Models.Application.ActivepatienttoActiveStocksModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ActivepatientID")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.Property<string>("ActivestocksID")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.HasKey("Id");

                    b.ToTable("ActivepatienttoActivestocks");
                });

            modelBuilder.Entity("PatientCareAPI.Models.Application.ActivepatienttofilesModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ActivepatientID")
                        .HasColumnType("text");

                    b.Property<string>("FilesID")
                        .HasColumnType("text");

                    b.Property<string>("ReportID")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ActivepatientstoFiles");
                });

            modelBuilder.Entity("PatientCareAPI.Models.Application.ActivestockModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Amount")
                        .HasColumnType("double");

                    b.Property<string>("Barcodeno")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("Deactivetime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Departmentid")
                        .HasColumnType("text");

                    b.Property<string>("Info")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Isdeactive")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("Purchasedate")
                        .HasColumnType("datetime");

                    b.Property<double>("Purchaseprice")
                        .HasColumnType("double");

                    b.Property<DateTime?>("Skt")
                        .HasColumnType("datetime");

                    b.Property<string>("Stockid")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Activestock");
                });

            modelBuilder.Entity("PatientCareAPI.Models.Application.DeactivestockModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Activestockid")
                        .HasColumnType("text");

                    b.Property<double>("Amount")
                        .HasColumnType("double");

                    b.Property<string>("Createduser")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Createtime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Deactivestocks");
                });

            modelBuilder.Entity("PatientCareAPI.Models.Application.PatientModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address1")
                        .HasColumnType("text");

                    b.Property<string>("Address2")
                        .HasColumnType("text");

                    b.Property<string>("Budgetstatus")
                        .HasColumnType("text");

                    b.Property<int>("Childnumber")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.Property<string>("Contactname1")
                        .HasColumnType("text");

                    b.Property<string>("Contactname2")
                        .HasColumnType("text");

                    b.Property<string>("Contactnumber1")
                        .HasColumnType("text");

                    b.Property<string>("Contactnumber2")
                        .HasColumnType("text");

                    b.Property<string>("Costumertypeid")
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<string>("CountryID")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Criminalrecord")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Dateofbirth")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Dateofdeath")
                        .HasColumnType("datetime");

                    b.Property<string>("Deathinfo")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("Disabledchildnumber")
                        .HasColumnType("int");

                    b.Property<string>("Fatherbiologicalaffinity")
                        .HasColumnType("text");

                    b.Property<string>("Fathername")
                        .HasColumnType("text");

                    b.Property<string>("Firstname")
                        .HasColumnType("text");

                    b.Property<string>("Gender")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Isfatheralive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Ismotheralive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Lastname")
                        .HasColumnType("text");

                    b.Property<string>("Marialstatus")
                        .HasColumnType("text");

                    b.Property<string>("Motherbiologicalaffinity")
                        .HasColumnType("text");

                    b.Property<string>("Mothername")
                        .HasColumnType("text");

                    b.Property<string>("Patienttypeid")
                        .HasColumnType("text");

                    b.Property<string>("Placeofbirth")
                        .HasColumnType("text");

                    b.Property<string>("Placeofdeath")
                        .HasColumnType("text");

                    b.Property<string>("Sgkstatus")
                        .HasColumnType("text");

                    b.Property<string>("Siblingstatus")
                        .HasColumnType("text");

                    b.Property<string>("Town")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("PatientCareAPI.Models.Application.PatientactivestockModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Activestockid")
                        .HasColumnType("text");

                    b.Property<string>("Amount")
                        .HasColumnType("text");

                    b.Property<string>("Createduser")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Createtime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Patientactivestocks");
                });

            modelBuilder.Entity("PatientCareAPI.Models.Application.PatientapplicantModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Activepatientid")
                        .HasColumnType("text");

                    b.Property<string>("Address1")
                        .HasColumnType("text");

                    b.Property<string>("Address2")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Appialdate")
                        .HasColumnType("datetime");

                    b.Property<string>("Appialreason")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.Property<string>("Contactname1")
                        .HasColumnType("text");

                    b.Property<string>("Contactname2")
                        .HasColumnType("text");

                    b.Property<string>("Contactnumber1")
                        .HasColumnType("text");

                    b.Property<string>("Contactnumber2")
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<string>("Countryid")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("Dateofbirth")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Educationstatus")
                        .HasColumnType("text");

                    b.Property<string>("Fathername")
                        .HasColumnType("text");

                    b.Property<string>("Firstname")
                        .HasColumnType("text");

                    b.Property<string>("Gender")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Jobstatus")
                        .HasColumnType("text");

                    b.Property<string>("Lastname")
                        .HasColumnType("text");

                    b.Property<string>("Marialstatus")
                        .HasColumnType("text");

                    b.Property<string>("Montlyincome")
                        .HasColumnType("text");

                    b.Property<string>("Mothername")
                        .HasColumnType("text");

                    b.Property<string>("Placeofbirth")
                        .HasColumnType("text");

                    b.Property<string>("Proximitystatus")
                        .HasColumnType("text");

                    b.Property<string>("Town")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Patientapplicants");
                });

            modelBuilder.Entity("PatientCareAPI.Models.Application.PatientbodycontrolformModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Activepatientid")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Actualdate")
                        .HasColumnType("datetime");

                    b.Property<string>("Checkreason")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.Property<string>("Controllername")
                        .HasColumnType("text");

                    b.Property<string>("Controllername2")
                        .HasColumnType("text");

                    b.Property<string>("Cotrollername1")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Documentcode")
                        .HasColumnType("text");

                    b.Property<string>("Info")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("Releasedate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Revisiondate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Patientbodycontrolforms");
                });

            modelBuilder.Entity("PatientCareAPI.Models.Application.PatientdiagnosisModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Diagnosisname")
                        .HasColumnType("text");

                    b.Property<string>("Diagnosisstatus")
                        .HasColumnType("text");

                    b.Property<string>("Info")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Reportid")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Patientdiagnosis");
                });

            modelBuilder.Entity("PatientCareAPI.Models.Application.PatientdisabilitypermitformModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Activepatientid")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Actualdate")
                        .HasColumnType("datetime");

                    b.Property<string>("ConcurrencyStamp")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Documentcode")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("Releasedate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Revisiondate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Patientdisabilitypermitforms");
                });

            modelBuilder.Entity("PatientCareAPI.Models.Application.PatientdisabledhealthboardreportModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Activepatientid")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Actualdate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Appealdate")
                        .HasColumnType("datetime");

                    b.Property<string>("ConcurrencyStamp")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Disabilityinfo")
                        .HasColumnType("text");

                    b.Property<string>("Disabilityname")
                        .HasColumnType("text");

                    b.Property<string>("Disabilityrate")
                        .HasColumnType("text");

                    b.Property<string>("Disabilitystatus")
                        .HasColumnType("text");

                    b.Property<string>("Documentcode")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Ispermanent")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Releasedate")
                        .HasColumnType("datetime");

                    b.Property<string>("Reportname")
                        .HasColumnType("text");

                    b.Property<string>("Reportno")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Revisiondate")
                        .HasColumnType("datetime");

                    b.Property<string>("Sendinginstitution")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Wontworkjobs")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Patientdisabledhealthboardreports");
                });

            modelBuilder.Entity("PatientCareAPI.Models.Application.PatientfirstadmissionformModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ActivepatientID")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Actualdate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Bodycontroldate")
                        .HasColumnType("datetime");

                    b.Property<string>("ConcurrencyStamp")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.Property<string>("Controllername")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Disableorientation")
                        .HasColumnType("text");

                    b.Property<string>("Documentcode")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Ishaveitem")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Itemstxt")
                        .HasColumnType("text");

                    b.Property<string>("Locationknowledge")
                        .HasColumnType("text");

                    b.Property<string>("Managername")
                        .HasColumnType("text");

                    b.Property<string>("Patienttype")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Releasedate")
                        .HasColumnType("datetime");

                    b.Property<string>("Reportdegree")
                        .HasColumnType("text");

                    b.Property<string>("Reportstatus")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Reportvaliddate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Revisiondate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Patientfirstadmissionforms");
                });

            modelBuilder.Entity("PatientCareAPI.Models.Application.PatientfirstapproachreportModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("Acceptancedate")
                        .HasColumnType("datetime");

                    b.Property<string>("ActivepatientID")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Actualdate")
                        .HasColumnType("datetime");

                    b.Property<string>("ConcurrencyStamp")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.Property<string>("Controllername")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Documentcode")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Healthinitialassesmentdate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Interviewdate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Knowledgesource")
                        .HasColumnType("text");

                    b.Property<string>("Ratinginfo")
                        .HasColumnType("text");

                    b.Property<string>("Reasonforhealtcare")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Releasedate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Revisiondate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Patientfirstapproachreports");
                });

            modelBuilder.Entity("PatientCareAPI.Models.Application.PatientmovementModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Activepatientid")
                        .HasColumnType("text");

                    b.Property<string>("IsComplated")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeactive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsTodoneeded")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Iswaitingactivation")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("Movementdate")
                        .HasColumnType("datetime");

                    b.Property<string>("Movementid")
                        .HasColumnType("text");

                    b.Property<int>("Movementtype")
                        .HasColumnType("int");

                    b.Property<string>("NewStatus")
                        .HasColumnType("text");

                    b.Property<string>("Oldstatus")
                        .HasColumnType("text");

                    b.Property<string>("UserID")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Patientmovements");
                });

            modelBuilder.Entity("PatientCareAPI.Models.Application.PatientownershiprecieveModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Activepatientid")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Actualdate")
                        .HasColumnType("datetime");

                    b.Property<string>("ConcurrencyStamp")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Documentcode")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Itemstxt")
                        .HasColumnType("text");

                    b.Property<string>("Recievercountryno")
                        .HasColumnType("text");

                    b.Property<string>("Recievername")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Releasedate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Revisiondate")
                        .HasColumnType("datetime");

                    b.Property<string>("Submittercountryno")
                        .HasColumnType("text");

                    b.Property<string>("Submittername")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Witnesscountryid")
                        .HasColumnType("text");

                    b.Property<string>("Witnessname")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Patientownershiprecieves");
                });

            modelBuilder.Entity("PatientCareAPI.Models.Application.PatientrecieveformModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Activepatientid")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Actualdate")
                        .HasColumnType("datetime");

                    b.Property<string>("ConcurrencyStamp")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Documentcode")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Itemstxt")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Releasedate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Reportdate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Revisiondate")
                        .HasColumnType("datetime");

                    b.Property<string>("Submittercountryid")
                        .HasColumnType("text");

                    b.Property<string>("Submittername")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Patientrecieveforms");
                });

            modelBuilder.Entity("PatientCareAPI.Models.Application.PatientsubmittingformModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Activepatientid")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Actualdate")
                        .HasColumnType("datetime");

                    b.Property<string>("ConcurrencyStamp")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Documentcode")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Itemstxt")
                        .HasColumnType("text");

                    b.Property<string>("Recievercountryno")
                        .HasColumnType("text");

                    b.Property<string>("Recievername")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Releasedate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Revisiondate")
                        .HasColumnType("datetime");

                    b.Property<string>("Submitterpersonelname")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Patientsubmittingforms");
                });

            modelBuilder.Entity("PatientCareAPI.Models.Application.StockmovementModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Activestockid")
                        .HasColumnType("text");

                    b.Property<double>("Amount")
                        .HasColumnType("double");

                    b.Property<DateTime?>("Movementdate")
                        .HasColumnType("datetime");

                    b.Property<int>("Movementtype")
                        .HasColumnType("int");

                    b.Property<double>("Newvalue")
                        .HasColumnType("double");

                    b.Property<double>("Prevvalue")
                        .HasColumnType("double");

                    b.Property<string>("UserID")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Stockmovements");
                });

            modelBuilder.Entity("PatientCareAPI.Models.Authentication.AuthoryModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.Property<string>("Group")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.Property<string>("Name")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.HasKey("Id");

                    b.ToTable("Authories");
                });

            modelBuilder.Entity("PatientCareAPI.Models.Authentication.RoleModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("PatientCareAPI.Models.Authentication.RoletoAuthory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AuthoryID")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.Property<string>("RoleID")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.HasKey("Id");

                    b.ToTable("RoletoAuthories");
                });

            modelBuilder.Entity("PatientCareAPI.Models.Authentication.UsersModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Defaultdepartment")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Email")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Language")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("NormalizedUsername")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Surname")
                        .HasColumnType("text");

                    b.Property<string>("Town")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PatientCareAPI.Models.Authentication.UsertoRoleModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("RoleID")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.Property<string>("UserID")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.HasKey("Id");

                    b.ToTable("UsertoRoles");
                });

            modelBuilder.Entity("PatientCareAPI.Models.Authentication.UsertoSaltModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Salt")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.Property<string>("UserID")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.HasKey("Id");

                    b.ToTable("UsertoSalt");
                });

            modelBuilder.Entity("PatientCareAPI.Models.Settings.CaseModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CaseStatus")
                        .HasColumnType("int");

                    b.Property<string>("Casecolor")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Shortname")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Cases");
                });

            modelBuilder.Entity("PatientCareAPI.Models.Settings.CasetoDepartmentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CaseID")
                        .HasColumnType("text");

                    b.Property<string>("DepartmentID")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CasetoDepartments");
                });

            modelBuilder.Entity("PatientCareAPI.Models.Settings.CostumertypeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Costumertypes");
                });

            modelBuilder.Entity("PatientCareAPI.Models.Settings.CostumertypetoDepartmentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CostumertypeID")
                        .HasColumnType("text");

                    b.Property<string>("DepartmentID")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CostumertypetoDepartments");
                });

            modelBuilder.Entity("PatientCareAPI.Models.Settings.DatatableModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Json")
                        .HasColumnType("text");

                    b.Property<string>("Tablename")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Datatables");
                });

            modelBuilder.Entity("PatientCareAPI.Models.Settings.DepartmentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Ishavepatients")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("PatientCareAPI.Models.Settings.DepartmenttoStationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DepartmentID")
                        .HasColumnType("text");

                    b.Property<string>("StationID")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DepartmenttoStation");
                });

            modelBuilder.Entity("PatientCareAPI.Models.Settings.FileModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("Downloadedcount")
                        .HasColumnType("int");

                    b.Property<string>("Filefolder")
                        .HasColumnType("text");

                    b.Property<string>("Filename")
                        .HasColumnType("text");

                    b.Property<string>("Filepath")
                        .HasColumnType("text");

                    b.Property<string>("Filetype")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Lastdownloadedip")
                        .HasColumnType("text");

                    b.Property<string>("Lastdownloadeduser")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("PatientCareAPI.Models.Settings.PatienttypeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Patienttypes");
                });

            modelBuilder.Entity("PatientCareAPI.Models.Settings.RemindingModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Remindings");
                });

            modelBuilder.Entity("PatientCareAPI.Models.Settings.StationsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Stations");
                });

            modelBuilder.Entity("PatientCareAPI.Models.Settings.StockModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Departmentid")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Stationtid")
                        .HasColumnType("text");

                    b.Property<string>("Unitid")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("PatientCareAPI.Models.Settings.TodoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsRequired")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Todoname")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Todos");
                });

            modelBuilder.Entity("PatientCareAPI.Models.Settings.TodogroupModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Todogroups");
                });

            modelBuilder.Entity("PatientCareAPI.Models.Settings.UnitModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("Unittype")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("PatientCareAPI.Models.Settings.UnittoDepartmentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DepartmentId")
                        .HasColumnType("text");

                    b.Property<string>("UnitId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("UnittoDepartments");
                });

            modelBuilder.Entity("PatientCareAPI.Models.Settings.UsertoDepartmentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DepartmanID")
                        .HasColumnType("text");

                    b.Property<string>("UserID")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("UsertoDepartment");
                });

            modelBuilder.Entity("PatientCareAPI.Models.Settings.UsertoStationsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("StationID")
                        .HasColumnType("text");

                    b.Property<string>("UserID")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("UsertoStations");
                });
#pragma warning restore 612, 618
        }
    }
}
